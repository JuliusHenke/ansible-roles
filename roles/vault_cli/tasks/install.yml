---

- name: install > Stat bin
  ansible.builtin.stat:
    path: "{{ manala_vault_cli_bin }}"
  register: __manala_vault_cli_bin_stat_result

- name: install > Get latest version
  ansible.builtin.uri:
    url: https://www.vaultproject.io/downloads
    return_content: true
  register: __manala_vault_cli_version_latest
  when:
    - not __manala_vault_cli_bin_stat_result.stat.exists
    - manala_vault_cli_version is none

- name: install > Binary
  block:

    - name: install > Create temporary directory
      ansible.builtin.tempfile:
        state: directory
      register: __manala_vault_cli_temporary_directory

    - name: install > Download to temporary directory
      ansible.builtin.unarchive:
        src: "{{ manala_vault_cli_version | ternary(
          'https://releases.hashicorp.com/vault/%(version)s/vault_%(version)s_linux_%(architecture)s.zip' | format(
            version=manala_vault_cli_version,
            architecture=ansible_architecture | manala.roles.vault_cli_architecture,
          ),
          __manala_vault_cli_version_latest.content | default | regex_search(
            'https://releases.hashicorp.com/vault/\\d+\\.\\d+\\.\\d+/vault_\\d+\\.\\d+\\.\\d+_linux_%(architecture)s\\.zip' | format(
              architecture=ansible_architecture | manala.roles.vault_cli_architecture,
            )
          )
        ) }}"
        dest: "{{ __manala_vault_cli_temporary_directory.path }}"
        remote_src: true

    - name: install > Copy binary
      ansible.builtin.copy:
        src: "{{ __manala_vault_cli_temporary_directory.path }}/vault"
        dest: "{{ manala_vault_cli_bin }}"
        remote_src: true
        owner: root
        group: root
        mode: "0755"

    - name: install > Delete temporary directory
      ansible.builtin.file:
        path: "{{ __manala_vault_cli_temporary_directory.path }}"
        state: absent

  when: not __manala_vault_cli_bin_stat_result.stat.exists
