---

###########
# Configs #
###########

- name: Configs
  tags: [configs]
  hosts: debian
  vars:
    tests_dir: /molecule/apt/configs
  tasks:
    - name: Clean tests dir
      ansible.builtin.file:  # noqa: risky-file-permissions
        path: "{{ tests_dir }}/{{ item.0 }}"
        state: "{{ item.1 }}"
      loop: "{{ ['default', 'defaults', 'exclusive'] | product(['absent', 'directory']) }}"
    - name: Touch existing files
      ansible.builtin.file:  # noqa: risky-file-permissions
        path: "{{ tests_dir }}/{{ item }}"
        state: touch
      loop: [
        default/state_absent_existing, default/state_ignore_existing,
        exclusive/existing, exclusive/existing_present, exclusive/existing_ignore,
      ]
    - block:  # noqa: name[missing]
        - name: Role - Default
          ansible.builtin.import_role:
            name: manala.roles.apt
            tasks_from: configs
          vars:
            manala_apt_configs_exclusive: false
            manala_apt_configs_dir: "{{ tests_dir }}/default"
            manala_apt_configs_defaults: {}
            manala_apt_configs:
              # Content
              - file: content
                config: |
                  Content
              # Template
              - file: template
                template: fixtures/template.j2
              - template: fixtures/template_file.j2
              # Flatten
              -
                - file: flatten
              # State
              - file: state_present_implicit
              - file: state_present
                state: present
              - file: state_absent
                state: absent
              - file: state_absent_existing
                state: absent
              - file: state_ignore
                state: ignore
              - file: state_ignore_existing
                state: ignore
        - name: Role - Defaults
          ansible.builtin.import_role:
            name: manala.roles.apt
            tasks_from: configs
          vars:
            manala_apt_configs_exclusive: false
            manala_apt_configs_dir: "{{ tests_dir }}/defaults"
            manala_apt_configs_defaults:
              template: fixtures/template.j2
            manala_apt_configs:
              - file: template
              - template: fixtures/template_file.j2
              - file: template_overwrite
                template: fixtures/template_file.j2
        - name: Role - Exclusive
          ansible.builtin.import_role:
            name: manala.roles.apt
            tasks_from: configs
          vars:
            manala_apt_configs_exclusive: true
            manala_apt_configs_dir: "{{ tests_dir }}/exclusive"
            manala_apt_configs_defaults: {}
            manala_apt_configs:
              - file: existing_present
              - file: existing_ignore
                state: ignore
              - file: ignore
                state: ignore
      always:
        - name: Goss
          ansible.builtin.command:
            cmd: goss --gossfile - validate
            stdin: "{{ lookup('ansible.builtin.template', 'goss/configs.yaml.j2') }}"
          changed_when: false

################
# Sources List #
################

- name: Sources List
  tags: [sources_list]
  hosts: debian
  vars:
    tests_dir: /molecule/apt/sources_list
  tasks:
    - name: Clean tests dir
      ansible.builtin.file:  # noqa: risky-file-permissions
        path: "{{ tests_dir }}"
        state: "{{ item }}"
      loop: [absent, directory]
    - block:  # noqa: name[missing]
        - name: Role - Content
          ansible.builtin.import_role:
            name: manala.roles.apt
            tasks_from: sources_list
          vars:
            manala_apt_sources_list_file: "{{ tests_dir }}/content"
            manala_apt_sources_list_template: ~
            manala_apt_sources_list: |
              Content
        - name: Role - Template
          ansible.builtin.import_role:
            name: manala.roles.apt
            tasks_from: sources_list
          vars:
            manala_apt_sources_list_file: "{{ tests_dir }}/template"
            manala_apt_sources_list_template: fixtures/template.j2
            manala_apt_sources_list: ~
      always:
        - name: Goss
          ansible.builtin.command:
            cmd: goss --gossfile - validate
            stdin: "{{ lookup('ansible.builtin.template', 'goss/sources_list.yaml.j2') }}"
          changed_when: false

###############
# Preferences #
###############

- name: Preferences
  tags: [preferences]
  hosts: debian
  vars:
    tests_dir: /molecule/apt/preferences
  tasks:
    - name: Clean tests dir
      ansible.builtin.file:  # noqa: risky-file-permissions
        path: "{{ tests_dir }}/{{ item.0 }}"
        state: "{{ item.1 }}"
      loop: "{{ ['default', 'defaults', 'exclusive'] | product(['absent', 'directory']) }}"
    - name: Touch existing files
      ansible.builtin.file:  # noqa: risky-file-permissions
        path: "{{ tests_dir }}/{{ item }}"
        state: touch
      loop: [
        default/state_absent_existing, default/state_ignore_existing,
        exclusive/existing, exclusive/existing_present, exclusive/existing_ignore,
      ]
    - block:  # noqa: name[missing]
        - name: Role - Default
          ansible.builtin.import_role:
            name: manala.roles.apt
            tasks_from: preferences
          vars:
            manala_apt_preferences_exclusive: false
            manala_apt_preferences_dir: "{{ tests_dir }}/default"
            manala_apt_preferences_defaults: {}
            manala_apt_preferences:
              # Short syntax
              - git@backports
              - libssl1.0.0@backports
              - php@sury_php:300
              - sury_php:100
              - sury_php:200
              # Pattern syntax
              - preference: ansible@ansible
              - preference: ansible@ansible
                file: ansible_foo
              - preference: ansible@ansible
                file: ansible_bar
                package: foo bar*
              - preference: ansible@ansible
                file: ansible_baz
                pin: baz
              - preference: ansible@ansible
                file: ansible_qux
                priority: 1234
              # Verbose syntax
              - package: foo
                pin: foo
                priority: 100
                file: foo_foo
              # Template
              - file: template
                template: fixtures/template.j2
              # Flatten
              -
                - package: foo
                  pin: foo
                  priority: 100
                  file: flatten
              # State
              - package: foo
                pin: foo
                priority: 100
                file: state_present_implicit
              - package: foo
                pin: foo
                priority: 100
                file: state_present
                state: present
              - package: foo
                pin: foo
                priority: 100
                file: state_absent
                state: absent
              - package: foo
                pin: foo
                priority: 100
                file: state_absent_existing
                state: absent
              - package: foo
                pin: foo
                priority: 100
                file: state_ignore
                state: ignore
              - package: foo
                pin: foo
                priority: 100
                file: state_ignore_existing
                state: ignore
        - name: Role - Defaults
          ansible.builtin.import_role:
            name: manala.roles.apt
            tasks_from: preferences
          vars:
            manala_apt_preferences_exclusive: false
            manala_apt_preferences_dir: "{{ tests_dir }}/defaults"
            manala_apt_preferences_defaults:
              template: fixtures/template.j2
            manala_apt_preferences:
              - file: template
              - file: template_overwrite
                template: fixtures/template_file.j2
        - name: Role - Exclusive
          ansible.builtin.import_role:
            name: manala.roles.apt
            tasks_from: preferences
          vars:
            manala_apt_preferences_exclusive: true
            manala_apt_preferences_dir: "{{ tests_dir }}/exclusive"
            manala_apt_preferences_defaults: {}
            manala_apt_preferences:
              - package: bar
                pin: bar
                priority: 100
                file: existing_present
              - file: existing_ignore
                state: ignore
              - file: ignore
                state: ignore
      always:
        - name: Goss
          ansible.builtin.command:
            cmd: goss --gossfile - validate
            stdin: "{{ lookup('ansible.builtin.template', 'goss/preferences.yaml.j2') }}"
          changed_when: false

########
# Keys #
########

- name: Keys
  tags: [keys]
  hosts: debian
  vars:
    tests_dir: /molecule/apt/keys
  tasks:
    - name: Clean tests dir
      ansible.builtin.file:  # noqa: risky-file-permissions
        path: "{{ tests_dir }}/{{ item.0 }}"
        state: "{{ item.1 }}"
      loop: "{{ ['default', 'exclusive'] | product(['absent', 'directory']) }}"
    - name: Touch existing files
      ansible.builtin.file:  # noqa: risky-file-permissions
        path: "{{ tests_dir }}/{{ item }}"
        state: touch
      loop: [
        default/state_absent_existing, default/state_ignore_existing,
        exclusive/existing, exclusive/existing_present, exclusive/existing_ignore,
      ]
    - block:  # noqa: name[missing]
        - name: Role - Default
          ansible.builtin.import_role:
            name: manala.roles.apt
            tasks_from: keys
          vars:
            manala_apt_preferences:
              - sury_php:100
            manala_apt_repositories:
              - nginx
              - file: yarn.sources
                uris: https://dl.yarnpkg.com/debian/
                suites: stable
                components: main
                key: yarn
              - file: postgresql.sources
                uris: http://apt.postgresql.org/pub/repos/apt/
                suites: "{{ ansible_facts.distribution_release }}-pgdg"
                components: main
                key:
                  url: https://www.postgresql.org/media/keys/ACCC4CF8.asc
                  file: postgresql.asc
                  checksum: sha256:0144068502a1eddd2a0280ede10ef607d1ec592ce819940991203941564e8e76
            manala_apt_keys_exclusive: false
            manala_apt_keys_dir: "{{ tests_dir }}/default"
            manala_apt_keys:
              # Short syntax
              - sensu-go
              # Pattern syntax
              - key: grafana
              # Verbose syntax
              - url: https://www.rabbitmq.com/rabbitmq-release-signing-key.asc
                file: rabbitmq.asc
                checksum: sha256:bf3d770e522b9436d9c6bee1b1206cba6800fc64d754b1293471038eb9529138
              # Flatten
              -
                - multimedia
              # State
              - key: mongodb_4_2
                file: state_present_implicit
              - key: mongodb_4_4
                file: state_present
                state: present
              - key: varnish_4_0
                file: state_absent
                state: absent
              - key: varnish_6_1
                file: state_absent_existing
                state: absent
              - key: glusterfs_6
                file: state_ignore
                state: ignore
              - key: glusterfs_10
                file: state_ignore_existing
                state: ignore
        - name: Role - Exclusive
          ansible.builtin.import_role:
            name: manala.roles.apt
            tasks_from: keys
          vars:
            manala_apt_keys_exclusive: true
            manala_apt_keys_dir: "{{ tests_dir }}/exclusive"
            manala_apt_keys:
              - key: varnish_6_1
                file: existing_present
              - key: glusterfs_6
                file: existing_ignore
                state: ignore
              - key: glusterfs_10
                file: ignore
                state: ignore
      always:
        - name: Goss
          ansible.builtin.command:
            cmd: goss --gossfile - validate
            stdin: "{{ lookup('ansible.builtin.template', 'goss/keys.yaml.j2') }}"
          changed_when: false

################
# Repositories #
################

- name: Repositories
  tags: [repositories]
  hosts: debian
  vars:
    tests_dir: /molecule/apt/repositories
  tasks:
    - name: Clean tests dir
      ansible.builtin.file:  # noqa: risky-file-permissions
        path: "{{ tests_dir }}/{{ item.0 }}"
        state: "{{ item.1 }}"
      loop: "{{ ['default', 'exclusive'] | product(['absent', 'directory']) }}"
    - name: Touch existing files
      ansible.builtin.file:  # noqa: risky-file-permissions
        path: "{{ tests_dir }}/{{ item }}"
        state: touch
      loop: [
        default/state_absent_existing, default/state_ignore_existing,
        exclusive/existing, exclusive/existing_present, exclusive/existing_ignore,
      ]
    - block:  # noqa: name[missing]
        - name: Role - Default
          ansible.builtin.import_role:
            name: manala.roles.apt
            tasks_from: repositories
          vars:
            manala_apt_preferences:
              - sury_php:100
            manala_apt_repositories_exclusive: false
            manala_apt_repositories_dir: "{{ tests_dir }}/default"
            manala_apt_repositories:
              # Short syntax
              - matomo
              # Pattern syntax
              - repository: grafana
              # Verbose syntax
              - file: yarn
                uris: https://dl.yarnpkg.com/debian/
                suites: stable
                components: main
                key: yarn
              - file: postgresql
                uris: http://apt.postgresql.org/pub/repos/apt/
                suites: "{{ ansible_facts.distribution_release }}-pgdg"
                components: main
                key:
                  url: https://www.postgresql.org/media/keys/ACCC4CF8.asc
                  id: ACCC4CF8
              # Flatten
              -
                - nginx
              # State
              - repository: nodesource_10
                file: state_present_implicit
              - repository: nodesource_12
                file: state_present
                state: present
              - repository: nodesource_14
                file: state_absent
                state: absent
              - repository: nodesource_16
                file: state_absent_existing
                state: absent
              - repository: nodesource_18
                file: state_ignore
                state: ignore
              - repository: nodesource_20
                file: state_ignore_existing
                state: ignore
        - name: Role - Exclusive
          ansible.builtin.import_role:
            name: manala.roles.apt
            tasks_from: repositories
          vars:
            manala_apt_repositories_exclusive: true
            manala_apt_repositories_dir: "{{ tests_dir }}/exclusive"
            manala_apt_repositories:
              - repository: nodesource_16
                file: existing_present
              - repository: nodesource_18
                file: existing_ignore
                state: ignore
              - repository: nodesource_20
                file: ignore
                state: ignore
      always:
        - name: Goss
          ansible.builtin.command:
            cmd: goss --gossfile - validate
            stdin: "{{ lookup('ansible.builtin.template', 'goss/repositories.yaml.j2') }}"
          changed_when: false

############
# Packages #
############

- name: Packages
  tags: [packages]
  hosts: debian
  tasks:
    - name: Packages absent
      ansible.builtin.apt:
        name: [asciijump, freesweep, wordplay]
        state: absent
    - name: Packages
      ansible.builtin.apt:
        name: [an, nettoe]
        install_recommends: false
        update_cache: true
        cache_valid_time: 3600
    - name: Packages apt
      ansible.builtin.apt:
        deb: |-
          {{ {
            'x86_64': 'https://snapshot.debian.org/archive/debian/20080726T000000Z/pool/main/p/pscan/pscan_1.2-9_amd64.deb',
            'aarch64': 'https://snapshot.debian.org/archive/debian/20140820T100258Z/pool/main/p/pscan/pscan_1.2-9_arm64.deb',
            'armv7l': 'https://snapshot.debian.org/archive/debian/20111201T234959Z/pool/main/p/pscan/pscan_1.2-9_armhf.deb',
          }[ansible_facts.architecture] }}
    - block:  # noqa: name[missing]
        - name: Role
          ansible.builtin.import_role:
            name: manala.roles.apt
            tasks_from: packages
          vars:
            manala_apt_packages:
              # Short syntax
              - asciijump
              - |-
                {{ {
                  'x86_64': 'https://snapshot.debian.org/archive/debian/20111228T033508Z/pool/main/s/spinner/spinner_1.2.4-3_amd64.deb',
                  'aarch64': 'https://snapshot.debian.org/archive/debian/20140819T040912Z/pool/main/s/spinner/spinner_1.2.4-3_arm64.deb',
                  'armv7l': 'https://snapshot.debian.org/archive/debian/20111228T033508Z/pool/main/s/spinner/spinner_1.2.4-3_armhf.deb',
                }[ansible_facts.architecture] }}
              # Verbose syntax
              - package: freesweep
              # Flatten
              -
                - package: http://snapshot.debian.org/archive/debian/20160619T164515Z/pool/main/w/wait-for-it/wait-for-it_0.0~git20160501-1_all.deb
              # State
              - package: an
                state: absent
              - package: pscan
                state: absent
              - package: nettoe
                state: ignore
              - package: wordplay
                state: ignore
      always:
        - name: Goss
          ansible.builtin.command:
            cmd: goss --gossfile - validate
            stdin: "{{ lookup('ansible.builtin.template', 'goss/packages.yaml.j2') }}"
          changed_when: false

#########
# Holds #
#########

- name: Holds - Default
  tags: [holds, holds.default]
  hosts: debian
  tasks:
    - name: Dpkg selections install
      ansible.builtin.dpkg_selections:
        name: "{{ item }}"
        selection: install
      loop: [apt, python3, grep]
    - name: Dpkg selections holds
      ansible.builtin.dpkg_selections:
        name: "{{ item }}"
        selection: hold
      loop: [dpkg, tar]
    - block:  # noqa: name[missing]
        - name: Role
          ansible.builtin.import_role:
            name: manala.roles.apt
            tasks_from: holds
          vars:
            manala_apt_holds:
              # Short syntax
              - apt
              # Flatten
              -
                # State
                - package: dpkg
                  state: absent
                - package: python3
                  state: present
                - package: grep
                  state: ignore
                - package: tar
                  state: ignore
      always:
        - name: Goss
          ansible.builtin.command:
            cmd: goss --gossfile - validate
            stdin: "{{ lookup('ansible.builtin.template', 'goss/holds.default.yaml.j2') }}"
          changed_when: false

- name: Holds - Exclusive
  tags: [holds, holds.exclusive]
  hosts: debian
  tasks:
    - name: Dpkg selections holds
      ansible.builtin.dpkg_selections:
        name: "{{ item }}"
        selection: hold
      loop: [python3, tar]
    - block:  # noqa: name[missing]
        - name: Role
          ansible.builtin.import_role:
            name: manala.roles.apt
            tasks_from: holds
          vars:
            manala_apt_holds_exclusive: true
            manala_apt_holds:
              - package: dpkg
              - package: grep
                state: ignore
              - package: tar
                state: ignore
      always:
        - name: Goss
          ansible.builtin.command:
            cmd: goss --gossfile - validate
            stdin: "{{ lookup('ansible.builtin.template', 'goss/holds.exclusive.yaml.j2') }}"
          changed_when: false

##########
# Update #
##########

- name: Update
  tags: [update]
  hosts: debian
  tasks:
    - block:  # noqa: name[missing]
        - name: Role
          ansible.builtin.import_role:
            name: manala.roles.apt
            tasks_from: update
          vars:
            manala_apt:
              update: true
